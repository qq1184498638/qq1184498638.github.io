{"version":3,"file":"static/js/206.c8d9262e.chunk.js","mappings":"qYAQaA,EAAM,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,iBAA4C,YACzE,OAAO,gBAAC,IAAD,CACNC,MAAO,EACPC,MAAOH,EAAS,EAAG,EACnBI,SAAU,SAAAC,GAAG,cAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,IAAoBI,O,sECKhCC,EAAUC,EAAAA,EAAAA,OAGXC,GAAYC,EAAAA,EAAAA,OAAK,SAACC,GAIpB,OAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA0BC,EAAAA,EAAAA,MAAnBC,EAAP,EAAOA,KACP,GADA,EAAaC,WACiCC,EAAAA,EAAAA,MAATC,GAArC,EAAOC,UAAP,EAA+BC,MAC/B,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,IAAYH,EAAO,KAGpC,IAFaI,EAAAA,EAAAA,MAE0BC,EAAAA,EAAAA,IAAWH,EAAUN,IAArDC,EAAP,EAAOA,UAAWS,EAAlB,EAAkBA,MAAaC,EAA/B,EAAyBT,KAKnBU,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACFd,GACAY,GAASG,EAAAA,EAAAA,IAASf,MAEvB,CAACY,EAAUZ,IAGd,IAAMgB,GAAeC,EAAAA,EAAAA,cAAY,SAACC,GAClB,IAARA,IACAA,EAAM,IAEV,IAAMC,GAAQ,kBAAOf,GAAP,IAAcgB,SAAUF,IACtCb,EAASc,KACV,CAACf,EAAOC,IAELgB,EACF,gBAAC,IAAD,CAAQC,aAAclB,EAAMgB,UAAY,EAAGG,UAAU,eAAeC,SAAUR,GAC1E,gBAAC3B,EAAD,CAAQH,MAAO,GAAf,sBADJ,OAGQc,QAHR,IAGQA,OAHR,EAGQA,EAAOyB,KAAI,SAACC,GACR,OACI,gBAACrC,EAAD,CAAQsC,IAAKD,EAAKE,GAAI1C,MAAOwC,EAAKE,IAAKF,EAAKG,UAQ1DC,GAAoBb,EAAAA,EAAAA,cAAY,SAACc,GACnC1B,GAAS,kBAAID,GAAL,IAAYyB,KAAME,EAAEC,OAAO9C,WACpC,CAACkB,EAAOC,KAEX4B,EAAAA,EAAAA,IAAiB,4BAAQ,GACzB,IAAOC,GAAUC,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,OAAzBF,OAIP,OACI,2BAII,4BAAOjD,GACP,gBAAC,IAAD,CAAQoD,QAAS,kBAAM1C,EAASV,EAAQ,KAAxC,gBACA,gBAAC,IAAD,CAAKqD,QAAS,SAAUC,MAAO,CAACC,UAAW,KACvC,gBAAC,IAAD,CAAKC,KAAM,IACP,gBAAC,IAAD,CAAKH,QAAS,iBACV,gBAAC,IAAD,KACI,uDAEJ,gBAAC,IAAD,KAEI,gBAAC,IAAD,CAAQC,MAAO,CAACG,MAAO,QAASL,QAAS,WAErCxC,MAFJ,gCAQhB,gBAAC,IAAD,CAAKyC,QAAS,SAAUC,MAAO,CAACC,UAAW,KACvC,gBAAC,IAAD,CAAKC,KAAM,IACP,gBAAC,IAAD,CAAOF,MAAO,CAACG,MAAO,QAASC,KAAM,GAAIC,UAAW,YAEhD,gBAAC,IAAD,CACID,KAAM,QACNE,WAAYxB,EACZC,aAAa,GACbpC,MAAOkB,EAAMyB,KACb1C,SAAU2C,IAEd,gBAAC,KAAD,CAAUpB,MAAOA,IACjB,gBAAC,IAAD,CACIoC,OAAQ,KACRC,QAAS,CACL,CACIC,MAAO,gBAAClE,EAAD,CAAKC,SAAS,EAAMkE,UAAU,IACrCC,OAAQ,SAAChE,EAAOiE,GACZ,OAAO,gBAACrE,EAAD,CAAKC,QAASoE,EAAQC,IAAKpE,iBA5ClD4C,EA4C8EuB,EAAQvB,GA5CvE,SAACwB,GAChClB,EAAO,CAACN,GAAAA,EAAIwB,IAAAA,QADG,IAACxB,IA+CQ,CACIoB,MAAO,eACPK,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE1B,KAAK4B,cAAcD,EAAE3B,OACzCqB,OAAQ,SAAChE,EAAOiE,GACZ,OAAO,gBAAC,KAAD,CAAMO,GAAE,UAAKP,EAAQvB,KAAOuB,EAAQtB,QAGnD,CACImB,MAAO,eACPK,UAAW,gBAGf,CACIL,MAAO,qBACPE,OAAQ,SAAChE,EAAOiE,GAAa,IAAD,EACxB,OAAQ,6BAChC,OAALnD,QAAK,IAALA,GAAA,UAAAA,EAAO2D,MAAK,SAAAC,GAAI,OAAIA,EAAKhC,KAAOuB,EAAQ/B,mBAAxC,eAAmDS,OAAQ,kBAItC,CACImB,MAAO,2BACPE,OAAQ,SAAChE,EAAOiE,GACZ,OAAQ,4BACrCA,EAAQU,QAAUC,GAAAA,CAAMX,EAAQU,SAASE,OAAO,cAAgB,kBAI3C,CACIf,MAAO,uBAAKT,MAAO,CAACG,MAAO,SAApB,gBACPQ,OAFJ,SAEWhE,EAAOiE,GACV,OAAO,gBAACa,EAAD,CAAMb,QAASA,OAG/Bc,WAAYtD,GAAQ,GAAIuD,YAAY,EAAOC,QAASlE,WAQ7E+D,EAAO,SAAC,GAAqC,IAApCb,EAAmC,EAAnCA,QACJrD,GAAaF,EAAAA,EAAAA,MAAbE,UAEQsE,GAAgBC,EAAAA,EAAAA,KAAiBjC,EAAAA,EAAAA,OAAzCF,OAWP,OACI,gBAAC,IAAD,CAAUoC,UAAW,aAAcC,OAAO,EAAMC,aAAc,CAACC,SAAU,QAASC,QAC9E,gBAAC,IAAD,KACI,gBAAC,SAAD,CAAW/C,IAAK,QACZ,gBAAC,KAAD,CAAiBgD,KAAM,OAAQtC,QAAS,WAEpCvC,EAAS,OAACqD,QAAD,IAACA,OAAD,EAACA,EAASvB,MAFvB,iBAKJ,gBAAC,SAAD,CAAWD,IAAK,UACZ,gBAAC,KAAD,CAAiBU,QAAS,WApBb,IAACT,EAAAA,EAqBU,OAACuB,QAAD,IAACA,OAAD,EAACA,EAASvB,GApB9CgD,EAAAA,EAAAA,QAAc,CACV5B,MAAO,oDACP6B,QAAS,uCACTC,OAAQ,eACRC,KAAM,WACFX,EAAa,CAACxC,GAAAA,QAiBR+C,KAAM,QAHR,mBAOR,gBAAC,IAAD,CAAQpC,MAAO,CAACyC,QAAS,GAAIL,KAAM,QAAQ,gBAACM,EAAA,EAAD,SAIvD","sources":["components/pin.tsx","page/input-list/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Rate} from \"antd\";\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n\tchecked: boolean;\r\n\tonCheckedChange?: (checked: boolean) => void\r\n}\r\n\r\nexport const Pin = ({checked, onCheckedChange, ...restProps}: PinProps) =>{\r\n\treturn <Rate\r\n\t\tcount={1}\r\n\t\tvalue={checked? 1: 0}\r\n\t\tonChange={num => onCheckedChange?.(!!num)}\r\n\t/>\r\n}\r\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\r\nimport {Button, Col, Dropdown, Input, Menu, Modal, Row, Select, Space, Table} from \"antd\";\r\nimport {useDebounce, useDocumentTitle, useMount} from \"../../utils\";\r\nimport {useHttp} from \"../../utils/https\";\r\nimport dayjs from \"dayjs\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Pin} from \"../../components/pin\";\r\nimport {useDeleteProject, useEditProject} from \"../../utils/project\";\r\nimport {useProject, useProjectModal, useProjectsQueryKey, useProjectsSearchParams} from \"../../utils/projects\";\r\nimport {ButtonNoPadding, ErrorBox} from \"../../components/lib\";\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport {useUsers} from \"../../utils/useUsers\";\r\nimport {Project, User} from \"../../types\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectUsers, setUsers} from \"../../context/auth-reducer\";\r\nimport {useMutation} from \"react-query\";\r\n\r\nconst {Option} = Select;\r\n\r\n\r\nconst InputList = memo((props) => {\r\n    // const InputList = memo((props: { projectButton: JSX.Element }) => {\r\n    // const dispatch = useDispatch();\r\n    // const [ ,setParam] = useState({name: \"\", personId: \"\"})\r\n    const [count, setCount] = useState(0)\r\n    const {open, startEdit} = useProjectModal();\r\n    const {isLoading: userLoading, data: users} = useUsers()\r\n    const [param, setParam] = useProjectsSearchParams()\r\n    const debounce = useDebounce(param, 200);\r\n    const http = useHttp();\r\n    // const {isLoading, error, data: list, retry} = useProject(debounce, users);\r\n    const {isLoading, error, data: list} = useProject(debounce, users);\r\n\r\n\r\n    //测试 code\r\n    // const users1 = useSelector(selectUsers);\r\n    const dispatch = useDispatch();\r\n    // const {mutate: userMutate} = useMutation<any, Error>((params: any) => dispatch(queryUsers()));\r\n    useEffect(() =>{\r\n        if (users) {\r\n            dispatch(setUsers(users));\r\n        }\r\n    }, [dispatch, users])\r\n\r\n\r\n    const handleSelect = useCallback((val: any) => {\r\n        if (val === 0) {\r\n            val = \"\"\r\n        }\r\n        const newParam = {...param, personId: val};\r\n        setParam(newParam)\r\n    }, [param, setParam])\r\n\r\n    const selectAfter = (\r\n        <Select defaultValue={param.personId || 0} className=\"select-after\" onSelect={handleSelect}>\r\n            <Option value={0}>负责人</Option>\r\n            {\r\n                users?.map((item: User) => {\r\n                    return (\r\n                        <Option key={item.id} value={item.id}>{item.name}</Option>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </Select>\r\n    );\r\n\r\n    const handleChangeParam = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setParam({...param, name: e.target.value})\r\n    }, [param, setParam])\r\n\r\n    useDocumentTitle(\"列表页面\", false)\r\n    const {mutate} = useEditProject(useProjectsQueryKey());\r\n    const pinProject = (id: number) => (pin: boolean) => {\r\n        mutate({id, pin})\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<Helmet>*/}\r\n            {/*\t<title>列表页面</title>*/}\r\n            {/*</Helmet>*/}\r\n            <span>{count}</span>\r\n            <Button onClick={() => setCount(count + 1)}>自增</Button>\r\n            <Row justify={\"center\"} style={{marginTop: 50}}>\r\n                <Col span={20}>\r\n                    <Row justify={\"space-between\"}>\r\n                        <Col>\r\n                            <h1>项目列表</h1>\r\n                        </Col>\r\n                        <Col>\r\n                            {/*{React.createElement(Button, {...props.projectButton.props, type: 'button'})}*/}\r\n                            <Button style={{width: '100%'}} onClick={() => {\r\n                                // dispatch(projectListActions.openProjectModal())\r\n                                open()\r\n                            }}>创建项目</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row justify={\"center\"} style={{marginTop: 20}}>\r\n                <Col span={20}>\r\n                    <Space style={{width: '100%'}} size={20} direction={\"vertical\"}>\r\n\r\n                        <Input\r\n                            size={\"large\"}\r\n                            addonAfter={selectAfter}\r\n                            defaultValue=\"\"\r\n                            value={param.name}\r\n                            onChange={handleChangeParam}\r\n                        />\r\n                        <ErrorBox error={error} />\r\n                        <Table\r\n                            rowKey={'id'}\r\n                            columns={[\r\n                                {\r\n                                    title: <Pin checked={true} disabled={true} />,\r\n                                    render: (value, project) => {\r\n                                        return <Pin checked={project.pin} onCheckedChange={pinProject(project.id)} />\r\n                                    }\r\n                                },\r\n                                {\r\n                                    title: '名称',\r\n                                    dataIndex: 'name',\r\n                                    sorter: (a, b) => a.name.localeCompare(b.name),\r\n                                    render: (value, project) => {\r\n                                        return <Link to={`${project.id}`}>{project.name}</Link>\r\n                                    }\r\n                                },\r\n                                {\r\n                                    title: '部门',\r\n                                    dataIndex: 'organization',\r\n                                    // render: text => <a>{text}</a>,\r\n                                },\r\n                                {\r\n                                    title: '负责人',\r\n                                    render: (value, project) => {\r\n                                        return (<span>\r\n\t\t\t\t\t\t\t\t\t\t{users?.find(user => user.id === project.personId)?.name || \"未知\"}\r\n\t\t\t\t\t\t\t\t\t</span>)\r\n                                    }\r\n                                },\r\n                                {\r\n                                    title: '创建时间',\r\n                                    render: (value, project) => {\r\n                                        return (<span>\r\n\t\t\t\t\t\t\t\t\t\t{project.created ? dayjs(project.created).format('YYYY-MM-DD') : \"未知\"}\r\n\t\t\t\t\t\t\t\t\t</span>)\r\n                                    }\r\n                                },\r\n                                {\r\n                                    title: <div style={{width: '100%'}}>操作</div>,\r\n                                    render(value, project) {\r\n                                        return <More project={project} />\r\n                                    }\r\n                                }\r\n                            ]} dataSource={list || []} pagination={false} loading={isLoading} />\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst More = ({project}: { project: Project }) => {\r\n    const {startEdit} = useProjectModal()\r\n    // const editProject = (id: number) => () => startEdit(id)\r\n    const {mutate: deleteMutate} = useDeleteProject(useProjectsQueryKey())\r\n    const confirmDeleteProject = (id: number) => {\r\n        Modal.confirm({\r\n            title: '确定删除这个项目?',\r\n            content: '点击确定删除',\r\n            okText: '确定',\r\n            onOk: () => {\r\n                deleteMutate({id})\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <Dropdown placement={\"bottomLeft\"} arrow={true} overlayStyle={{minWidth: '8rem'}} overlay={\r\n            <Menu>\r\n                <Menu.Item key={'edit'}>\r\n                    <ButtonNoPadding type={'link'} onClick={() => {\r\n                        // dispatch(projectListActions.openProjectModal())\r\n                        startEdit(project?.id)\r\n                    }}>编辑</ButtonNoPadding>\r\n                </Menu.Item>\r\n                <Menu.Item key={'delete'}>\r\n                    <ButtonNoPadding onClick={() => {\r\n                        confirmDeleteProject(project?.id)\r\n                    }\r\n                    } type={\"link\"}>删除</ButtonNoPadding>\r\n                </Menu.Item>\r\n            </Menu>\r\n        }>\r\n            <Button style={{padding: 0}} type={'link'}><EditOutlined /></Button>\r\n        </Dropdown>\r\n    )\r\n}\r\nexport default InputList\r\n"],"names":["Pin","checked","onCheckedChange","count","value","onChange","num","Option","Select","InputList","memo","props","useState","setCount","useProjectModal","open","startEdit","useUsers","users","isLoading","data","useProjectsSearchParams","param","setParam","debounce","useDebounce","useHttp","useProject","error","list","dispatch","useDispatch","useEffect","setUsers","handleSelect","useCallback","val","newParam","personId","selectAfter","defaultValue","className","onSelect","map","item","key","id","name","handleChangeParam","e","target","useDocumentTitle","mutate","useEditProject","useProjectsQueryKey","onClick","justify","style","marginTop","span","width","size","direction","addonAfter","rowKey","columns","title","disabled","render","project","pin","dataIndex","sorter","a","b","localeCompare","to","find","user","created","dayjs","format","More","dataSource","pagination","loading","deleteMutate","useDeleteProject","placement","arrow","overlayStyle","minWidth","overlay","type","Modal","content","okText","onOk","padding","EditOutlined"],"sourceRoot":""}