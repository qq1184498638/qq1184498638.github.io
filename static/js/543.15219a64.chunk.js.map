{"version":3,"file":"static/js/543.15219a64.chunk.js","mappings":"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","sources":["page/kanban/utils.ts","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/VideoCameraOutlined.js","../node_modules/@ant-design/icons/es/icons/VideoCameraOutlined.js","page/project/index.tsx"],"sourcesContent":["import {useLocation} from \"react-router\";\r\nimport {useQueryProject} from \"../../utils/project\";\r\nimport {useUrlQueryParam} from \"../../utils/url\";\r\nimport {useMemo} from \"react\";\r\nimport {useDebounce} from \"../../utils\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n    const {pathname} = useLocation();\r\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n    return Number(id)\r\n}\r\n\r\nexport const useProjectInUrl = () => useQueryProject(useProjectIdInUrl())\r\n\r\nexport const useKanbanSearchParams = () => ({projectId: useProjectIdInUrl()})\r\nexport const useTaskSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam(['name', 'typeId', 'processorId', 'tagId'])\r\n    const projectId = useProjectIdInUrl()\r\n    return useMemo(() => ({\r\n        projectId,\r\n        typeId: Number(param.typeId) || undefined,\r\n        processorId: Number(param.processorId) || undefined,\r\n        tagId: Number(param.tagId) || undefined,\r\n        name: param.name || undefined,\r\n    }), [projectId ,param])\r\n}\r\n\r\nexport const useKanbanQueryKey = () => ['kanbans', useKanbanSearchParams()]\r\nexport const useTaskQueryKey = () => ['tasks', useTaskSearchParams()]\r\n\r\nexport const useRouteType = () => {\r\n    const units = useLocation().pathname.split('/')\r\n    return units[units.length - 1]\r\n};\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","// This icon file is generated automatically.\nvar VideoCameraOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 302.3L784 376V224c0-35.3-28.7-64-64-64H128c-35.3 0-64 28.7-64 64v576c0 35.3 28.7 64 64 64h592c35.3 0 64-28.7 64-64V648l128 73.7c21.3 12.3 48-3.1 48-27.6V330c0-24.6-26.7-40-48-27.7zM712 792H136V232h576v560zm176-167l-104-59.8V458.9L888 399v226zM208 360h112c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H208c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"video-camera\", \"theme\": \"outlined\" };\nexport default VideoCameraOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport VideoCameraOutlinedSvg from \"@ant-design/icons-svg/es/asn/VideoCameraOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar VideoCameraOutlined = function VideoCameraOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: VideoCameraOutlinedSvg\n  }));\n};\n\nVideoCameraOutlined.displayName = 'VideoCameraOutlined';\nexport default /*#__PURE__*/React.forwardRef(VideoCameraOutlined);","import React, {memo, useState} from \"react\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport type {MenuProps} from 'antd';\r\nimport {Col, Layout, Menu, Row} from \"antd\";\r\nimport {useLocation, useNavigate} from \"react-router\";\r\nimport {useMount} from \"../../utils\";\r\nimport {UserOutlined, VideoCameraOutlined,} from '@ant-design/icons';\r\nimport {useRouteType} from \"../kanban/utils\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nconst ProjectScreen = memo(() => {\r\n    const navigate = useNavigate();\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const {search, pathname} = useLocation();\r\n    useMount(() => {\r\n        const split = pathname.split('/');\r\n        if (split.length === 3) {\r\n            navigate('kanban', {replace: true})\r\n        }else{\r\n            navigate(pathname + search, {replace: true})\r\n        }\r\n    })\r\n    const routeType = useRouteType();\r\n    const items: MenuProps['items'] = [\r\n        UserOutlined,\r\n        VideoCameraOutlined,\r\n    ].map((icon, index) => {\r\n        if (index === 0) {\r\n            return {\r\n                key: 'kanban',\r\n                icon: React.createElement(icon),\r\n                label: <Link to={'kanban'}>看板</Link>\r\n            }\r\n        }else{\r\n            return {\r\n                key: 'epic',\r\n                icon: React.createElement(icon),\r\n                label: <Link to={'epic'}>任务组</Link>\r\n            }\r\n        }\r\n    });\r\n    const {lg} = useBreakpoint();\r\n    return (\r\n        <>\r\n            <Layout style={{height: '100%'}}>\r\n                <Sider breakpoint={\"lg\"} theme={'light'} width={'300'}\r\n                       collapsible={true} collapsed={collapsed} onCollapse={value => setCollapsed(value)}\r\n                       style={{\r\n                           overflow: 'auto',\r\n                           height: '100vh',\r\n                           position: 'fixed',\r\n                           left: 0,\r\n                           top: 61,\r\n                           bottom: 0,\r\n                           // paddingTop: '10vh'\r\n                       }}\r\n                >\r\n                    <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['kanban']} selectedKeys={[routeType]} items={items} />\r\n                </Sider>\r\n                <Content style={{marginLeft: lg ? 300 : 80, paddingTop: 20, height: '100%', overflow: 'auto'}}>\r\n                    <Row align={\"top\"} justify={\"center\"} style={{height: '100%'}}>\r\n                        <Col span={22} style={{height: '100%'}}>\r\n                            {/*<h1>project screen</h1>*/}\r\n                            <Outlet />\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n            </Layout>\r\n        </>\r\n    )\r\n})\r\nexport default ProjectScreen;\r\n"],"names":["useProjectIdInUrl","id","useLocation","pathname","match","Number","useProjectInUrl","useQueryProject","useKanbanSearchParams","projectId","useTaskSearchParams","useUrlQueryParam","param","useMemo","typeId","undefined","processorId","tagId","name","useKanbanQueryKey","useTaskQueryKey","useRouteType","units","split","length","UserOutlined","props","ref","React","AntdIcon","_objectSpread","icon","UserOutlinedSvg","displayName","VideoCameraOutlined","VideoCameraOutlinedSvg","Content","Layout","Sider","memo","navigate","useNavigate","useState","collapsed","setCollapsed","search","useMount","replace","routeType","items","map","index","key","label","to","lg","useBreakpoint","style","height","breakpoint","theme","width","collapsible","onCollapse","value","overflow","position","left","top","bottom","mode","defaultSelectedKeys","selectedKeys","marginLeft","paddingTop","align","justify","span"],"sourceRoot":""}