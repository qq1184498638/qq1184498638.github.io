{"version":3,"file":"static/js/935.be2776af.chunk.js","mappings":"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","sources":["utils/kanban.ts","utils/task-type.ts","page/kanban/createTasks.tsx","page/kanban/Mark.tsx","components/drag-and-drop.tsx","page/kanban/KanbanColumn.tsx","components/TagSelect.tsx","page/kanban/searchPanel.tsx","page/kanban/createKanban.tsx","page/kanban/taskModal.tsx","page/kanban/index.tsx","page/kanban/utils.ts","utils/task.ts"],"sourcesContent":["import {Kanban} from \"../types\";\r\nimport {useHttp} from \"./https\";\r\nimport {QueryKey, useMutation, useQuery, useQueryClient} from \"react-query\";\r\nimport {\r\n    useAddConfig,\r\n    useConfig,\r\n    useDeleteConfig,\r\n    useReorderKanbanConfig\r\n} from \"./useOptimisticOptions\";\r\n\r\nexport const useKanbans = (params?: Partial<Kanban>) =>{\r\n    const client = useHttp()\r\n    return useQuery<Kanban[]>(['kanbans', params], () =>{\r\n        return client('kanbans', {data: params})\r\n    })\r\n}\r\nexport const useAddKanban = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    const queryClient = useQueryClient();\r\n    return useMutation((params: Partial<Kanban>) => client(`kanbans`, {\r\n        method: 'POST',\r\n        data: params\r\n    }), useAddConfig(queryKey))\r\n};\r\nexport const useDeleteKanban = (queryKey: QueryKey) => {\r\n    const client = useHttp()\r\n    const queryClient = useQueryClient();\r\n    return useMutation((id:number) => client(`kanbans/${id}`, {\r\n        method: 'DELETE',\r\n    }), useDeleteConfig(queryKey))\r\n};\r\n\r\nexport interface SortProps {\r\n    fromId: number | undefined,\r\n    referenceId: number | undefined,\r\n    fromKanbanId?: number,\r\n    toKanbanId?: number\r\n    type: 'before' | 'after'\r\n}\r\n\r\nexport const useReorderKanban = (queryKey: QueryKey) =>{\r\n    const client = useHttp()\r\n    return useMutation(\r\n        (params: SortProps) =>{\r\n            return client('kanbans/reorder', {\r\n                data: params,\r\n                method: 'POST'\r\n            })\r\n        },useReorderKanbanConfig(queryKey)\r\n    )\r\n}\r\n","import {TaskType} from \"../types\";\r\nimport {useHttp} from \"./https\";\r\nimport {useQuery} from \"react-query\";\r\n\r\nexport const useTasksType = () => {\r\n    const client = useHttp();\r\n    return useQuery<TaskType[]>(['taskTypes'], () => {\r\n        return client('taskTypes');\r\n    })\r\n}\r\n","import React, {memo, useState} from \"react\";\r\nimport {useAddTask} from \"../../utils/task\";\r\nimport {useProjectIdInUrl, useTaskQueryKey} from \"./utils\";\r\nimport {Button, Card, Input} from \"antd\";\r\n\r\nexport const CreateTasks = memo(({kanbanId}: {kanbanId: number}) =>{\r\n    const [name, setName] = useState('')\r\n    const {isLoading, mutateAsync: addTask} = useAddTask(useTaskQueryKey())\r\n    const [inputMode, setInputMode] = useState(false)\r\n    const projectId = useProjectIdInUrl();\r\n    const toggle = () => setInputMode(mode => !mode)\r\n    const submit = async () =>{\r\n        setName('')\r\n        toggle()\r\n        await addTask({projectId, name, kanbanId})\r\n    }\r\n    if (!inputMode) {\r\n        return <Button type={\"link\"} onClick={toggle}>创建任务</Button>\r\n    }\r\n    return <Card>\r\n        <Input disabled={isLoading} onBlur={toggle} placeholder={'do some thing...'} autoFocus = {true}\r\n               value={name}\r\n               onChange={ev => setName(ev.target.value)}\r\n               onPressEnter={submit}/>\r\n    </Card>\r\n})\r\n","import React from \"react\"\r\n\r\nexport const Mark = ({name, keyword}: { name?: string, keyword?: string }) => {\r\n    if (!keyword) {\r\n        return <>{name}</>\r\n    }\r\n    const arr = name?.split(keyword)\r\n    return <>\r\n        {\r\n            arr?.map((str, index) => {\r\n                return <span key={index}>\r\n                   {str}\r\n                    {\r\n                        index === arr.length -1 ? null : <span style={{color: '#257afd'}}>{keyword}</span>\r\n                    }\r\n                </span>\r\n            })\r\n        }\r\n    </>\r\n\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Draggable,\r\n  DraggableProps,\r\n  Droppable,\r\n  DroppableProps,\r\n  DroppableProvided,\r\n  DroppableProvidedProps,\r\n} from \"react-beautiful-dnd\";\r\n\r\ntype DropProps = Omit<DroppableProps, \"children\"> & { children: ReactNode };\r\n\r\nexport const Drop = ({ children, ...props }: DropProps) => {\r\n  return (\r\n    <Droppable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.droppableProps,\r\n            ref: provided.innerRef,\r\n            provided,\r\n          });\r\n        }\r\n        return <div />;\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\ntype DropChildProps = Partial<\r\n  { provided: DroppableProvided } & DroppableProvidedProps\r\n> &\r\n  React.HTMLAttributes<HTMLDivElement>;\r\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\r\n  ({ children, ...props }, ref) => (\r\n    <div ref={ref} {...props}>\r\n      {children}\r\n      {props.provided?.placeholder}\r\n    </div>\r\n  )\r\n);\r\n\r\ntype DragProps = Omit<DraggableProps, \"children\"> & { children: ReactNode };\r\nexport const Drag = ({ children, ...props }: DragProps) => {\r\n  return (\r\n    <Draggable {...props}>\r\n      {(provided) => {\r\n        if (React.isValidElement(children)) {\r\n          return React.cloneElement(children, {\r\n            ...provided.draggableProps,\r\n            ...provided.dragHandleProps,\r\n            ref: provided.innerRef,\r\n          });\r\n        }\r\n        return <div />;\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n","import React, {memo} from \"react\";\r\nimport {Kanban} from \"../../types\";\r\nimport {useDeleteTask, useTaskModal, useTasks} from \"../../utils/task\";\r\nimport {useKanbanQueryKey, useTaskQueryKey, useTaskSearchParams} from \"./utils\";\r\nimport {useTasksType} from \"../../utils/task-type\";\r\nimport {CheckOutlined, CloseOutlined, EllipsisOutlined} from '@ant-design/icons';\r\nimport styled from \"@emotion/styled\";\r\nimport {Button, Card, Col, Dropdown, Menu, message, Modal, Row, Skeleton, Space} from \"antd\";\r\nimport {CreateTasks} from \"./createTasks\";\r\nimport {useDebounce} from \"../../utils\";\r\nimport {Mark} from \"./Mark\";\r\nimport {useDeleteKanban} from \"../../utils/kanban\";\r\nimport {Drag, Drop, DropChild} from \"../../components/drag-and-drop\";\r\n\r\nconst TaskTypeIcon = ({id}: { id: number }) => {\r\n    const {data: taskTypes} = useTasksType()\r\n    const name = taskTypes?.find(taskType => taskType.id === id)?.name\r\n    if (!name) {\r\n        return null\r\n    }\r\n\r\n    return name === 'task' ? <CheckOutlined /> : <CloseOutlined />\r\n}\r\n\r\nexport const KanbanColumn = memo((props: { kanban: Kanban }) => {\r\n    const {kanban} = props;\r\n    const params = useTaskSearchParams();\r\n    const debounce = useDebounce(params, 1000);\r\n    const {data: allTasks, isLoading} = useTasks(debounce);\r\n    const tasks = allTasks?.filter(task => task.kanbanId === kanban.id)\r\n    const {startEdit} = useTaskModal();\r\n    const {mutateAsync: deleteTaskMutate, isLoading: deleteTaskLoading} = useDeleteTask(useTaskQueryKey());\r\n    const deleteTask = (id: number) => {\r\n        Modal.confirm({\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            title: '确定删除看板?',\r\n            onOk: async () => {\r\n                await deleteTaskMutate(id)\r\n                message.info(\"看板删除成功!!!\")\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    return (<Container>\r\n        <Row justify={\"space-between\"}>\r\n            <Col>\r\n                <h1>{kanban.name}</h1>\r\n            </Col>\r\n            <Col>\r\n                <More kanban={kanban} />\r\n            </Col>\r\n        </Row>\r\n        <Skeleton loading={isLoading} active={true} round={true} paragraph={{rows: 10}}>\r\n            <TaskContainer>\r\n                <Drop type={'Row'} direction={'vertical'} droppableId={'kanban' + kanban.id}>\r\n                    <DropChild style={{}}>\r\n                        {\r\n                            tasks?.map((task, index) => {\r\n                                return (\r\n                                    <Drag key={task.id} draggableId={'task' + task.id} index={index}>\r\n                                        <TaskCard onClick={() => startEdit(task.id)}\r\n                                                  style={{ }}>\r\n                                            <Mark keyword={debounce.name} name={task.name} />\r\n                                            {/*{task.name}*/}\r\n                                            <div style={{marginBottom: 0}}>\r\n                                                <Space>\r\n                                                    <TaskTypeIcon id={task.typeId} />\r\n                                                    <Button onClick={(ev) => {\r\n                                                        ev.stopPropagation()\r\n                                                        deleteTask(task.id)\r\n                                                    }} type={'link'}>删除任务</Button>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </TaskCard>\r\n                                    </Drag>\r\n                                )\r\n                            })\r\n                        }\r\n                    </DropChild>\r\n                </Drop>\r\n            </TaskContainer>\r\n\r\n        </Skeleton>\r\n        <CreateTasks kanbanId={kanban.id} />\r\n    </Container>)\r\n})\r\n\r\nconst More = ({kanban}: { kanban: Kanban }) => {\r\n    const {mutateAsync: deleteKanban, isLoading} = useDeleteKanban(useKanbanQueryKey());\r\n    const startEdit = async () => {\r\n        Modal.confirm({\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            title: '确定删除看板?',\r\n            onOk: async () => {\r\n                await deleteKanban(kanban.id)\r\n                message.info(\"看板删除成功!!!\")\r\n            }\r\n        })\r\n    }\r\n    const menu = <Menu>\r\n        <Menu.Item>\r\n            <Button onClick={startEdit} type={'link'}>\r\n                删除\r\n            </Button>\r\n        </Menu.Item>\r\n    </Menu>\r\n    return <Dropdown overlay={menu}>\r\n        <Button type={'link'}>\r\n            <EllipsisOutlined style={{fontSize: 18}} />\r\n        </Button>\r\n    </Dropdown>\r\n}\r\nconst TaskCard = styled(Card)`\r\n  .ant-card-body {\r\n    padding: 12px;\r\n  }\r\n  margin-bottom: .5rem;\r\n  cursor: pointer;\r\n`\r\nexport const Container = styled.div`\r\n  //min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem 1rem;\r\n  height: 100%;\r\n  min-height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nconst TaskContainer = styled.div`\r\n  //overflow: auto;\r\n  flex: 0 0 auto;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n","import {IdSelect} from \"./IdSelect\";\r\nimport React from \"react\";\r\nimport {useTasksType} from \"../utils/task-type\";\r\n\r\nexport const TagSelect = (props: React.ComponentProps<typeof IdSelect>) =>{\r\n    const {data: taskTypes} = useTasksType();\r\n    return <IdSelect options={taskTypes || []} {...props} />\r\n}\r\n","import React from \"react\";\r\nimport {memo} from \"react\";\r\nimport {useTaskSearchParams} from \"./utils\";\r\nimport {useSetUrlSearchParam} from \"../../utils/url\";\r\nimport {Row} from \"../../components/lib\";\r\nimport {Button, Input} from \"antd\";\r\nimport {UserSelect} from \"../../components/UserSelect\";\r\nimport {TagSelect} from \"../../components/TagSelect\";\r\nimport {useDebounce} from \"../../utils\";\r\n\r\nexport const SearchPanel = memo(() =>{\r\n    const searchParams = useTaskSearchParams()\r\n    const setSearchParams = useSetUrlSearchParam()\r\n    const reset = () =>{\r\n        setSearchParams({\r\n            typeId: undefined,\r\n            processorId: undefined,\r\n            tagId: undefined,\r\n            name: undefined,\r\n        })\r\n    }\r\n    return <Row marginBottom={3} gap={true}  style={{display: 'flex', justifyContent: 'start'}}>\r\n        <Input style={{width: '20rem'}} placeholder={'人物名'} value={searchParams.name} onChange={event => setSearchParams({name: event.target.value})}/>\r\n        <UserSelect style={{width: '20rem'}} defaultOptionName={'经办人'} value = {searchParams.processorId} onChange={value => setSearchParams({processorId: value})} />\r\n        <TagSelect style={{width: '20rem'}} defaultOptionName={'类型'} value = {searchParams.typeId} onChange={value => setSearchParams({typeId: value})} />\r\n        <Button onClick={reset} >清除刷选器</Button>\r\n    </Row>\r\n})\r\n","import React, {memo, useState} from \"react\";\r\nimport {useKanbanQueryKey, useProjectIdInUrl} from \"./utils\";\r\nimport {Container} from \"./KanbanColumn\";\r\nimport {Input} from \"antd\";\r\nimport {useAddKanban} from \"../../utils/kanban\";\r\n\r\nexport const CreateKanban = memo(() =>{\r\n    const [name, setName] = useState('')\r\n    const projectId = useProjectIdInUrl();\r\n    const {mutateAsync: addKanban} = useAddKanban(useKanbanQueryKey())\r\n    const submit = async () => {\r\n        await addKanban({name, projectId})\r\n        setName('')\r\n    }\r\n    return <Container >\r\n        <Input size={'large'} placeholder = {'新建看板名称'} value={name} onChange={ev => setName(ev.target.value)}\r\n               onPressEnter={submit}\r\n        />\r\n    </Container>\r\n})\r\n","import React, {memo, useEffect} from \"react\";\r\nimport {useForm} from \"antd/es/form/Form\";\r\nimport {useEditTask, useTaskModal} from \"../../utils/task\";\r\nimport {useTaskQueryKey} from \"./utils\";\r\nimport {Form, Input, message, Modal, Skeleton} from \"antd\";\r\nimport {UserSelect} from \"../../components/UserSelect\";\r\nimport {TagSelect} from \"../../components/TagSelect\";\r\n\r\nconst layout = {labelCol: {span: 8}, wrapperCol: {span: 16}}\r\nexport const TaskModal = memo(() => {\r\n    const [form] = useForm()\r\n    const {editingTask, editingTaskId, close, isLoading} = useTaskModal()\r\n    const {mutateAsync: editTask, isLoading: editLoading} = useEditTask(useTaskQueryKey())\r\n    const onCancel = () => {\r\n        form.resetFields()\r\n        close()\r\n    }\r\n\r\n    const onOk = async () => {\r\n        await editTask({...editingTask, ...form.getFieldsValue()})\r\n        message.info(\"task update success!!!\");\r\n        close()\r\n    }\r\n\r\n    useEffect(() =>{\r\n        form.setFieldsValue(editingTask)\r\n    }, [editingTask, form])\r\n\r\n    return <>\r\n        <Modal okText={'确认'} cancelText={'取消'}  confirmLoading={editLoading}\r\n               onCancel={onCancel} onOk={onOk}\r\n               title={'编辑任务'} visible={!!editingTaskId}>\r\n            <Skeleton loading={isLoading}>\r\n                <Form {...layout} initialValues={editingTask} form={form}>\r\n                    <Form.Item label={'任务名'} name={'name'} rules={[{required: true, message: '请输入任务名'}]}>\r\n                        <Input  placeholder={'人物名'} />\r\n                    </Form.Item>\r\n                    <Form.Item label={'经办人'} name={'processorId'} rules={[{required: true, message: '请输入经办人'}]}>\r\n                        <UserSelect defaultOptionName={'经办人'}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label={'类型'} name={'typeId'} rules={[{required: true, message: '请输入经办人'}]}>\r\n                        <TagSelect  defaultOptionName={'类型'} />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Skeleton>\r\n        </Modal>\r\n    </>\r\n})\r\n","import React, {memo, useCallback} from \"react\";\r\nimport {useDocumentTitle} from \"../../utils\";\r\nimport {useKanbans, useReorderKanban} from \"../../utils/kanban\";\r\nimport {useKanbanQueryKey, useKanbanSearchParams, useProjectInUrl, useTaskQueryKey, useTaskSearchParams} from \"./utils\";\r\nimport {KanbanColumn} from \"./KanbanColumn\";\r\nimport {Col, Layout, Row, Skeleton} from \"antd\";\r\nimport {SearchPanel} from \"./searchPanel\";\r\nimport useBreakpoint from \"antd/es/grid/hooks/useBreakpoint\";\r\nimport {CreateKanban} from \"./createKanban\";\r\nimport {TaskModal} from \"./taskModal\";\r\nimport {DragDropContext, DropResult} from \"react-beautiful-dnd\";\r\nimport {Drag, Drop, DropChild} from \"../../components/drag-and-drop\";\r\nimport {useReorderTask, useTasks} from \"../../utils/task\";\r\n\r\nexport const useDropEnd = () => {\r\n    const {data: kanbans} = useKanbans(useKanbanSearchParams())\r\n    const {data: tasks = []} = useTasks(useTaskSearchParams())\r\n    const {mutate} = useReorderKanban(useKanbanQueryKey())\r\n    const {mutate: taskMutate} = useReorderTask(useTaskQueryKey())\r\n    return useCallback(({source, destination, type}: DropResult) => {\r\n        if (!destination) {\r\n            return\r\n        }\r\n        if (type === 'COLUMN') {\r\n            const fromId = kanbans?.[source.index].id\r\n            const toId = kanbans?.[destination.index].id\r\n            if (!fromId || !toId || fromId === toId) {\r\n                return\r\n            }\r\n            const type = destination.index > source.index ? 'after' : 'before'\r\n            mutate({fromId, referenceId: toId, type})\r\n        }else if (type === 'Row') {\r\n            const fromKanbanId = +source.droppableId.replace('kanban', '')\r\n            const toKanbanId = +destination.droppableId.replace('kanban', '')\r\n            const fromTask = tasks.filter(task => task.kanbanId === fromKanbanId)[source.index]\r\n            const toTask = tasks.filter(task => task.kanbanId === toKanbanId)[destination.index]\r\n            if (!fromTask || !toTask || fromTask === toTask) {\r\n                return\r\n            }\r\n            taskMutate({\r\n                fromId: fromTask.id,\r\n                referenceId: toTask?.id,\r\n                type: fromKanbanId === toKanbanId && destination.index > source.index ? 'after' : 'before',\r\n                fromKanbanId,\r\n                toKanbanId\r\n            })\r\n        }\r\n    }, [tasks,kanbans, mutate, taskMutate])\r\n\r\n}\r\nconst KanBan = memo(props => {\r\n    useDocumentTitle('看板列表')\r\n    const {data: currentProject} = useProjectInUrl()\r\n    const {data: kanbans, isLoading} = useKanbans(useKanbanSearchParams())\r\n    const {lg, xxl} = useBreakpoint();\r\n    const drop = useDropEnd()\r\n    return (\r\n        <DragDropContext onDragEnd={(...params) => {\r\n            drop(params[0])\r\n        }}>\r\n            <Layout style={{overflow: 'hidden', height: '100%'}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h1>{currentProject?.name}kanban</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify={'start'}>\r\n                    <Col style={{width: '100%'}}>\r\n                        <SearchPanel />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    <Skeleton active loading={isLoading} round={true} paragraph={{rows: 15}}>\r\n                        <Drop type={\"COLUMN\"} direction={'horizontal'} droppableId={'kanban'}>\r\n                            <DropChild style={{display: \"flex\", flex: 1}}>\r\n                                <Row gutter={24} justify={'space-between'} wrap={false}\r\n                                     style={{flex: 1, overflowX: 'auto'}}>\r\n                                    {\r\n                                        kanbans?.map((kanban, index) => {\r\n                                            return <Drag draggableId={\"kanban\" + kanban.id} index={index}\r\n                                                         key={kanban.id}>\r\n                                                <Col xs={{span: 24}} sm={{span: 12}} md={{span: 8}}\r\n                                                     xl={{span: 6}}><KanbanColumn kanban={kanban} /></Col>\r\n                                            </Drag>\r\n                                        })\r\n                                    }\r\n                                    <Col xs={{span: 24}} sm={{span: 12}} md={{span: 8}} xl={{span: 6}}>\r\n                                        <CreateKanban />\r\n                                    </Col>\r\n                                </Row>\r\n                            </DropChild>\r\n                        </Drop>\r\n                    </Skeleton>\r\n                }\r\n                <TaskModal />\r\n            </Layout>\r\n        </DragDropContext>\r\n    )\r\n    // return <div style={{overflow: 'auto', height: '100%' }}>\r\n    // \t<Row>\r\n    // \t\t<Col>\r\n    // \t\t\t<h1>{currentProject?.name}kanban</h1>\r\n    // \t\t</Col>\r\n    // \t</Row>\r\n    // \t<Row  justify={'start'}>\r\n    // \t\t<Col >\r\n    // \t\t\t<SearchPanel  />\r\n    // \t\t</Col>\r\n    // \t</Row>\r\n    // \t<Row justify={'space-between'} style={{flex: 1}} >\r\n    // \t\t{\r\n    // \t\t\tkanbans?.map(kanban => {\r\n    // \t\t\t\tif(xxl){\r\n    // \t\t\t\t\treturn <Col key={kanban.id}><KanbanColumn kanban={kanban} /></Col>\r\n    // \t\t\t\t}else{\r\n    // \t\t\t\t\treturn <Col span={24} key={kanban.id}><KanbanColumn kanban={kanban} /></Col>\r\n    // \t\t\t\t}\r\n    // \t\t\t})\r\n    // \t\t}\r\n    // \t</Row>\r\n    // </div>\r\n\r\n})\r\nexport default KanBan\r\n","import {useLocation} from \"react-router\";\r\nimport {useQueryProject} from \"../../utils/project\";\r\nimport {useUrlQueryParam} from \"../../utils/url\";\r\nimport {useMemo} from \"react\";\r\nimport {useDebounce} from \"../../utils\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n    const {pathname} = useLocation();\r\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n    return Number(id)\r\n}\r\n\r\nexport const useProjectInUrl = () => useQueryProject(useProjectIdInUrl())\r\n\r\nexport const useKanbanSearchParams = () => ({projectId: useProjectIdInUrl()})\r\nexport const useTaskSearchParams = () => {\r\n    const [param, setParam] = useUrlQueryParam(['name', 'typeId', 'processorId', 'tagId'])\r\n    const projectId = useProjectIdInUrl()\r\n    return useMemo(() => ({\r\n        projectId,\r\n        typeId: Number(param.typeId) || undefined,\r\n        processorId: Number(param.processorId) || undefined,\r\n        tagId: Number(param.tagId) || undefined,\r\n        name: param.name || undefined,\r\n    }), [projectId ,param])\r\n}\r\n\r\nexport const useKanbanQueryKey = () => ['kanbans', useKanbanSearchParams()]\r\nexport const useTaskQueryKey = () => ['tasks', useTaskSearchParams()]\r\n\r\nexport const useRouteType = () => {\r\n    const units = useLocation().pathname.split('/')\r\n    return units[units.length - 1]\r\n};\r\n","import {Task} from \"../types\";\r\nimport {useHttp} from \"./https\";\r\nimport {QueryKey, useMutation, useQuery} from \"react-query\";\r\nimport {\r\n    useAddConfig,\r\n    useConfig,\r\n    useDeleteConfig,\r\n    useEditConfig,\r\n    useReorderKanbanConfig, useReorderTaskConfig\r\n} from \"./useOptimisticOptions\";\r\nimport {useUrlQueryParam} from \"./url\";\r\nimport {useCallback} from \"react\";\r\nimport {SortProps} from \"./kanban\";\r\n\r\nexport const useTasks = (params?: Partial<Task>) =>{\r\n    const client = useHttp();\r\n    return useQuery<Task[]>(['tasks', params], () =>{\r\n        return client('tasks', {data: params});\r\n    })\r\n}\r\n\r\nexport const useTask = (id?:number) =>{\r\n    const client = useHttp();\r\n    return useQuery<Task>(['task', {id}], () =>{\r\n        return client(`tasks/${id}`)\r\n    }, {\r\n        enabled: !!id\r\n    })\r\n}\r\n\r\nexport const useAddTask = (queryKey: QueryKey) =>{\r\n    const client = useHttp();\r\n    return useMutation((params: Partial<Task>) => {\r\n        return client('tasks', {\r\n            data: params,\r\n            method: 'POST'\r\n        })\r\n    }, useAddConfig(queryKey))\r\n}\r\n\r\nexport const useEditTask = (queryKey: QueryKey) =>{\r\n    const client = useHttp();\r\n    return useMutation((params: Partial<Task>) => {\r\n        return client(`tasks/${params.id}`, {\r\n            data: params,\r\n            method: 'PATCH'\r\n        })\r\n    }, useEditConfig(queryKey))\r\n}\r\n\r\nexport const useDeleteTask = (queryKey: QueryKey) =>{\r\n    const client = useHttp();\r\n    return useMutation((id: number) => {\r\n        return client(`tasks/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n    }, useDeleteConfig(queryKey))\r\n}\r\n\r\nexport const useTaskModal = () =>{\r\n    const [{editingTaskId}, setEditingTaskId] = useUrlQueryParam(['editingTaskId'])\r\n    const {data: editingTask, isLoading} = useTask(Number(editingTaskId))\r\n    const startEdit = useCallback((id: number) =>{\r\n        setEditingTaskId({editingTaskId: id})\r\n    }, [setEditingTaskId])\r\n\r\n    const close = useCallback(() =>{\r\n        setEditingTaskId({editingTaskId: ''})\r\n    }, [setEditingTaskId])\r\n\r\n    return {\r\n        editingTaskId,\r\n        editingTask,\r\n        isLoading,\r\n        close,\r\n        startEdit\r\n    }\r\n}\r\nexport const useReorderTask = (queryKey: QueryKey) =>{\r\n    const client = useHttp()\r\n    return useMutation(\r\n        (params: SortProps) =>{\r\n            return client('tasks/reorder', {\r\n                data: params,\r\n                method: 'POST'\r\n            })\r\n        }, useReorderTaskConfig(queryKey)\r\n    )\r\n}\r\n"],"names":["useKanbans","params","client","useHttp","useQuery","data","useTasksType","CreateTasks","memo","kanbanId","useState","name","setName","useAddTask","useTaskQueryKey","isLoading","addTask","mutateAsync","inputMode","setInputMode","projectId","useProjectIdInUrl","toggle","mode","submit","disabled","onBlur","placeholder","autoFocus","value","onChange","ev","target","onPressEnter","type","onClick","Mark","keyword","arr","split","map","str","index","key","length","style","color","Drop","children","props","provided","React","droppableProps","ref","innerRef","DropChild","Drag","draggableProps","dragHandleProps","TaskTypeIcon","id","taskTypes","find","taskType","CheckOutlined","CloseOutlined","KanbanColumn","kanban","useTaskSearchParams","debounce","useDebounce","useTasks","allTasks","tasks","filter","task","startEdit","useTaskModal","useDeleteTask","deleteTaskMutate","Container","justify","More","loading","active","round","paragraph","rows","TaskContainer","direction","droppableId","draggableId","TaskCard","marginBottom","typeId","stopPropagation","Modal","okText","cancelText","title","onOk","message","queryKey","useQueryClient","useMutation","method","useDeleteConfig","useDeleteKanban","useKanbanQueryKey","deleteKanban","menu","overlay","EllipsisOutlined","fontSize","styled","Card","TagSelect","IdSelect","options","SearchPanel","searchParams","setSearchParams","useSetUrlSearchParam","gap","display","justifyContent","width","event","UserSelect","defaultOptionName","processorId","undefined","tagId","CreateKanban","addKanban","useAddConfig","useAddKanban","size","layout","labelCol","span","wrapperCol","TaskModal","useForm","form","editingTask","editingTaskId","close","useEditTask","editTask","editLoading","getFieldsValue","useEffect","setFieldsValue","confirmLoading","onCancel","resetFields","visible","initialValues","label","rules","required","useDropEnd","kanbans","useKanbanSearchParams","mutate","useReorderKanbanConfig","useReorderKanban","taskMutate","useReorderTask","useCallback","source","destination","fromId","toId","referenceId","fromKanbanId","replace","toKanbanId","fromTask","toTask","KanBan","useDocumentTitle","currentProject","useProjectInUrl","useBreakpoint","drop","lg","xxl","onDragEnd","overflow","height","flex","gutter","wrap","overflowX","xs","sm","md","xl","useLocation","pathname","match","Number","useQueryProject","useUrlQueryParam","param","useMemo","useRouteType","units","useEditConfig","setEditingTaskId","enabled","useTask","useReorderTaskConfig"],"sourceRoot":""}